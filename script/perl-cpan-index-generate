#!perl
use v5.40;

use Getopt::Long::Parser;
use JSON::XS;
use Path::Tiny;

my $VERSION = v0.0.1;

my $HELP = <<'EOF';
Usage: perl-cpan-index-generate [options] dir

Options:
  -H, --header    header text
  -I, --include   exclude packages
  -E, --exclude   include packages
  -h, --help      show help
  -v, --version   show version

Examples:
  ❯ perl-cpan-index-generate -E Test::Simple,ExtUtils::MakeMaker ./local/lib/perl5
  ❯ perl-cpan-index-generate -I URI,LWP ./local/lib/perl5
EOF

package Index {
    sub new ($class, %argv) {
        bless { json => JSON::XS->new, index => [], %argv }, $class;
    }
    sub load ($self, $dir) {
        my sub visit ($path, $state) {
            return if $path !~ /install\.json$/;
            my $install = $self->{json}->decode($path->slurp);

            my @provide = sort keys $install->{provides}->%*;
            for my $package (@provide) {
                return if exists $self->{exclude}{$package};
            }
            if ($self->{include}->%*) {
                my $found;
                for my $package (@provide) {
                    exists $self->{include}{$package} and $found++;
                }
                return if !$found;
            }
            for my $package (@provide) {
                my $option = $install->{provides}{$package};
                push $self->{index}->@*, {
                    package => $package,
                    version => $option->{version},
                    pathname => $install->{pathname},
                };
            }
        }
        Path::Tiny->new($dir)->visit(\&visit, { recurse => 1 });
    }
    sub write ($self, $fh) {
        $fh->print($self->{header}, "\n\n");
        for my $index (sort { lc $a->{package} cmp lc $b->{package} } $self->{index}->@*) {
            $fh->printf("%s %s %s\n",
                $index->{package}, $index->{version} || 'undef', $index->{pathname},
            );
        }
    }
}

my $parser = Getopt::Long::Parser->new(config => ['no_auto_abbrev', 'no_ignore_case', 'bundling']);
$parser->getoptionsfromarray(\@ARGV,
    "H|header=s" => \(my $header = "# This file was generated by perl-cpan-index-generate."),
    "I|include=s" => \(my $include = ""),
    "E|exclude=s" => \(my $exclude = ""),
    "h|help" => sub (@) { die $HELP },
    "v|version" => sub (@) { printf "v%vd\n", $VERSION; exit },
) or exit 1;

my $dir = shift;
die "error: need DIRECTORY argument\n" if !$dir;
die "error: '$dir' is not a directory\n" if !-d $dir;

my %include = map { ($_, 1) } split /,/, $include;
my %exclude = map { ($_, 1) } split /,/, $exclude;

my $index = Index->new(header => $header, include => \%include, exclude => \%exclude);
$index->load($dir);
$index->write(\*STDOUT);
